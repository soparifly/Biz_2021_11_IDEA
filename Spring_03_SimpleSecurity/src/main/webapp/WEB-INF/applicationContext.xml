<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="cookieCsrfTokenRepository" class="org.springframework.security.web.csrf.CookieCsrfTokenRepository">
        <property name="cookieHttpOnly" value="false"/>
    </bean>
<!--    spring security에 내장된 암호 검사 코드에서 사용할 bean    -->
    <bean id="passowrdEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg index="0" value="4"/>
    </bean>

    <security:http>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/member/login" access="permitAll"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <!-- * 로그인으로 요청된 패턴은 누구나 접속할 수 있고, 나머지 부분은 아무도 쓸 수 없게 만들기 -->
        <security:form-login login-page="/member/login" login-processing-url="/login" username-parameter="username" password-parameter="password"/>
        <security:logout/>
        <security:csrf token-repository-ref="cookieCsrfTokenRepository"/>
    </security:http>

    <!-- * 테스트용 사용자 로그인 검사? id가 csy가 비밀번호가 1234면 그 사용자는 ADMIN 이다 -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="csy" authorities="ROLE_ADMIN" password="{noop}1234"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>